"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/estree-util-scope@1.0.0";
exports.ids = ["vendor-chunks/estree-util-scope@1.0.0"];
exports.modules = {

/***/ "(rsc)/../node_modules/.pnpm/estree-util-scope@1.0.0/node_modules/estree-util-scope/lib/index.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/.pnpm/estree-util-scope@1.0.0/node_modules/estree-util-scope/lib/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createVisitors: () => (/* binding */ createVisitors)\n/* harmony export */ });\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devlop */ \"(rsc)/../node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/development.js\");\n/**\n * @import {Node, Pattern} from 'estree'\n * @import {Scope, Visitors} from './types.js'\n */\n\n\n\n/**\n * Create state to track whatâ€™s defined.\n *\n * @returns {Visitors}\n *   State.\n */\nfunction createVisitors() {\n  /** @type {[topLevel: Scope, ...rest: Array<Scope>]} */\n  const scopes = [{block: false, defined: []}]\n\n  return {enter, exit, scopes}\n\n  /**\n   * @param {Node} node\n   *   Node.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node) {\n    // On arrow functions, create scope, add parameters.\n    if (node.type === 'ArrowFunctionExpression') {\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n    // On block statements, create scope.\n    // Not sure why `periscopic` only does `Block`/`For`/`ForIn`/`ForOf`.\n    // I added `DoWhile`/`While` here just to be sure.\n    else if (\n      node.type === 'BlockStatement' ||\n      node.type === 'DoWhileStatement' ||\n      node.type === 'ForInStatement' ||\n      node.type === 'ForOfStatement' ||\n      node.type === 'ForStatement' ||\n      node.type === 'WhileStatement'\n    ) {\n      scopes.push({block: true, defined: []})\n    }\n\n    // On catch clauses, create scope, add param.\n    else if (node.type === 'CatchClause') {\n      scopes.push({block: true, defined: []})\n      if (node.param) definePattern(node.param, true)\n    }\n\n    // Add identifier of class declaration.\n    else if (node.type === 'ClassDeclaration') {\n      defineIdentifier(node.id.name, false)\n    }\n\n    // On function declarations, add name, create scope, add parameters.\n    else if (node.type === 'FunctionDeclaration') {\n      defineIdentifier(node.id.name, false)\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n\n    // On function expressions, add name, create scope, add parameters.\n    else if (node.type === 'FunctionExpression') {\n      if (node.id) defineIdentifier(node.id.name, false)\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n\n    // Add specifiers of import declarations.\n    else if (node.type === 'ImportDeclaration') {\n      for (const specifier of node.specifiers) {\n        defineIdentifier(specifier.local.name, false)\n      }\n    }\n\n    // Add patterns of variable declarations.\n    else if (node.type === 'VariableDeclaration') {\n      for (const declaration of node.declarations) {\n        definePattern(declaration.id, node.kind !== 'var')\n      }\n    }\n  }\n\n  /**\n   * @param {Node} node\n   *   Node.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(node) {\n    if (\n      node.type === 'ArrowFunctionExpression' ||\n      node.type === 'FunctionDeclaration' ||\n      node.type === 'FunctionExpression'\n    ) {\n      const scope = scopes.pop()\n      ;(0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(scope, 'expected scope')\n      ;(0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(!scope.block, 'expected non-block')\n    } else if (\n      node.type === 'BlockStatement' ||\n      node.type === 'CatchClause' ||\n      node.type === 'DoWhileStatement' ||\n      node.type === 'ForInStatement' ||\n      node.type === 'ForOfStatement' ||\n      node.type === 'ForStatement' ||\n      node.type === 'WhileStatement'\n    ) {\n      const scope = scopes.pop()\n      ;(0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(scope, 'expected scope')\n      ;(0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(scope.block, 'expected block')\n    }\n  }\n\n  /**\n   * Define an identifier in a scope.\n   *\n   * @param {string} id\n   * @param {boolean} block\n   * @returns {undefined}\n   */\n  function defineIdentifier(id, block) {\n    let index = scopes.length\n    /** @type {Scope | undefined} */\n    let scope\n\n    while (index--) {\n      scope = scopes[index]\n\n      if (block || !scope.block) {\n        break\n      }\n    }\n\n    (0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(scope)\n    scope.defined.push(id)\n  }\n\n  /**\n   * Define a pattern in a scope.\n   *\n   * @param {Pattern} pattern\n   * @param {boolean} block\n   */\n  function definePattern(pattern, block) {\n    // `[, x]`\n    if (pattern.type === 'ArrayPattern') {\n      for (const element of pattern.elements) {\n        if (element) {\n          definePattern(element, block)\n        }\n      }\n    }\n\n    // `{x=y}`\n    else if (pattern.type === 'AssignmentPattern') {\n      definePattern(pattern.left, block)\n    }\n\n    // `x`\n    else if (pattern.type === 'Identifier') {\n      defineIdentifier(pattern.name, block)\n    }\n\n    // `{x}`\n    else if (pattern.type === 'ObjectPattern') {\n      for (const property of pattern.properties) {\n        // `{key}`, `{key = value}`, `{key: value}`\n        if (property.type === 'Property') {\n          definePattern(property.value, block)\n        }\n        // `{...x}`\n        else {\n          (0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(property.type === 'RestElement')\n          definePattern(property, block)\n        }\n      }\n    }\n\n    // `...x`\n    else {\n      (0,devlop__WEBPACK_IMPORTED_MODULE_0__.ok)(pattern.type === 'RestElement')\n      definePattern(pattern.argument, block)\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2VzdHJlZS11dGlsLXNjb3BlQDEuMC4wL25vZGVfbW9kdWxlcy9lc3RyZWUtdXRpbC1zY29wZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLFlBQVksZUFBZTtBQUMzQixZQUFZLGlCQUFpQjtBQUM3Qjs7QUFFbUM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLDBDQUEwQztBQUN2RCxtQkFBbUIsMEJBQTBCOztBQUU3QyxVQUFVOztBQUVWO0FBQ0EsYUFBYSxNQUFNO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseUJBQXlCO0FBQzVDOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIseUJBQXlCO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBCQUEwQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBCQUEwQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMkNBQU07QUFDWixNQUFNLDJDQUFNO0FBQ1osTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMkNBQU07QUFDWixNQUFNLDJDQUFNO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxTQUFTO0FBQ3RCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksMENBQU07QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxJQUFJO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsRUFBRTtBQUNYO0FBQ0E7QUFDQSxhQUFhLElBQUksS0FBSyxZQUFZLEtBQUssV0FBVztBQUNsRDtBQUNBO0FBQ0E7QUFDQSxhQUFhLEtBQUs7QUFDbEI7QUFDQSxVQUFVLDBDQUFNO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLDBDQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91YW5lbGFfY29tby9Eb2N1bWVudHMvZGV2ZWxvcG1lbnQvbm9kZWpzL2Fya29zL25vZGVfbW9kdWxlcy8ucG5wbS9lc3RyZWUtdXRpbC1zY29wZUAxLjAuMC9ub2RlX21vZHVsZXMvZXN0cmVlLXV0aWwtc2NvcGUvbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7Tm9kZSwgUGF0dGVybn0gZnJvbSAnZXN0cmVlJ1xuICogQGltcG9ydCB7U2NvcGUsIFZpc2l0b3JzfSBmcm9tICcuL3R5cGVzLmpzJ1xuICovXG5cbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICdkZXZsb3AnXG5cbi8qKlxuICogQ3JlYXRlIHN0YXRlIHRvIHRyYWNrIHdoYXTigJlzIGRlZmluZWQuXG4gKlxuICogQHJldHVybnMge1Zpc2l0b3JzfVxuICogICBTdGF0ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZpc2l0b3JzKCkge1xuICAvKiogQHR5cGUge1t0b3BMZXZlbDogU2NvcGUsIC4uLnJlc3Q6IEFycmF5PFNjb3BlPl19ICovXG4gIGNvbnN0IHNjb3BlcyA9IFt7YmxvY2s6IGZhbHNlLCBkZWZpbmVkOiBbXX1dXG5cbiAgcmV0dXJuIHtlbnRlciwgZXhpdCwgc2NvcGVzfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogICBOb2RlLlxuICAgKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICAgKiAgIE5vdGhpbmcuXG4gICAqL1xuICBmdW5jdGlvbiBlbnRlcihub2RlKSB7XG4gICAgLy8gT24gYXJyb3cgZnVuY3Rpb25zLCBjcmVhdGUgc2NvcGUsIGFkZCBwYXJhbWV0ZXJzLlxuICAgIGlmIChub2RlLnR5cGUgPT09ICdBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbicpIHtcbiAgICAgIHNjb3Blcy5wdXNoKHtibG9jazogZmFsc2UsIGRlZmluZWQ6IFtdfSlcblxuICAgICAgZm9yIChjb25zdCBwYXJhbWV0ZXIgb2Ygbm9kZS5wYXJhbXMpIHtcbiAgICAgICAgZGVmaW5lUGF0dGVybihwYXJhbWV0ZXIsIGZhbHNlKVxuICAgICAgfVxuICAgIH1cbiAgICAvLyBPbiBibG9jayBzdGF0ZW1lbnRzLCBjcmVhdGUgc2NvcGUuXG4gICAgLy8gTm90IHN1cmUgd2h5IGBwZXJpc2NvcGljYCBvbmx5IGRvZXMgYEJsb2NrYC9gRm9yYC9gRm9ySW5gL2BGb3JPZmAuXG4gICAgLy8gSSBhZGRlZCBgRG9XaGlsZWAvYFdoaWxlYCBoZXJlIGp1c3QgdG8gYmUgc3VyZS5cbiAgICBlbHNlIGlmIChcbiAgICAgIG5vZGUudHlwZSA9PT0gJ0Jsb2NrU3RhdGVtZW50JyB8fFxuICAgICAgbm9kZS50eXBlID09PSAnRG9XaGlsZVN0YXRlbWVudCcgfHxcbiAgICAgIG5vZGUudHlwZSA9PT0gJ0ZvckluU3RhdGVtZW50JyB8fFxuICAgICAgbm9kZS50eXBlID09PSAnRm9yT2ZTdGF0ZW1lbnQnIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdGb3JTdGF0ZW1lbnQnIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdXaGlsZVN0YXRlbWVudCdcbiAgICApIHtcbiAgICAgIHNjb3Blcy5wdXNoKHtibG9jazogdHJ1ZSwgZGVmaW5lZDogW119KVxuICAgIH1cblxuICAgIC8vIE9uIGNhdGNoIGNsYXVzZXMsIGNyZWF0ZSBzY29wZSwgYWRkIHBhcmFtLlxuICAgIGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ0NhdGNoQ2xhdXNlJykge1xuICAgICAgc2NvcGVzLnB1c2goe2Jsb2NrOiB0cnVlLCBkZWZpbmVkOiBbXX0pXG4gICAgICBpZiAobm9kZS5wYXJhbSkgZGVmaW5lUGF0dGVybihub2RlLnBhcmFtLCB0cnVlKVxuICAgIH1cblxuICAgIC8vIEFkZCBpZGVudGlmaWVyIG9mIGNsYXNzIGRlY2xhcmF0aW9uLlxuICAgIGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ0NsYXNzRGVjbGFyYXRpb24nKSB7XG4gICAgICBkZWZpbmVJZGVudGlmaWVyKG5vZGUuaWQubmFtZSwgZmFsc2UpXG4gICAgfVxuXG4gICAgLy8gT24gZnVuY3Rpb24gZGVjbGFyYXRpb25zLCBhZGQgbmFtZSwgY3JlYXRlIHNjb3BlLCBhZGQgcGFyYW1ldGVycy5cbiAgICBlbHNlIGlmIChub2RlLnR5cGUgPT09ICdGdW5jdGlvbkRlY2xhcmF0aW9uJykge1xuICAgICAgZGVmaW5lSWRlbnRpZmllcihub2RlLmlkLm5hbWUsIGZhbHNlKVxuICAgICAgc2NvcGVzLnB1c2goe2Jsb2NrOiBmYWxzZSwgZGVmaW5lZDogW119KVxuXG4gICAgICBmb3IgKGNvbnN0IHBhcmFtZXRlciBvZiBub2RlLnBhcmFtcykge1xuICAgICAgICBkZWZpbmVQYXR0ZXJuKHBhcmFtZXRlciwgZmFsc2UpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gT24gZnVuY3Rpb24gZXhwcmVzc2lvbnMsIGFkZCBuYW1lLCBjcmVhdGUgc2NvcGUsIGFkZCBwYXJhbWV0ZXJzLlxuICAgIGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ0Z1bmN0aW9uRXhwcmVzc2lvbicpIHtcbiAgICAgIGlmIChub2RlLmlkKSBkZWZpbmVJZGVudGlmaWVyKG5vZGUuaWQubmFtZSwgZmFsc2UpXG4gICAgICBzY29wZXMucHVzaCh7YmxvY2s6IGZhbHNlLCBkZWZpbmVkOiBbXX0pXG5cbiAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIG5vZGUucGFyYW1zKSB7XG4gICAgICAgIGRlZmluZVBhdHRlcm4ocGFyYW1ldGVyLCBmYWxzZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgc3BlY2lmaWVycyBvZiBpbXBvcnQgZGVjbGFyYXRpb25zLlxuICAgIGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ0ltcG9ydERlY2xhcmF0aW9uJykge1xuICAgICAgZm9yIChjb25zdCBzcGVjaWZpZXIgb2Ygbm9kZS5zcGVjaWZpZXJzKSB7XG4gICAgICAgIGRlZmluZUlkZW50aWZpZXIoc3BlY2lmaWVyLmxvY2FsLm5hbWUsIGZhbHNlKVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBwYXR0ZXJucyBvZiB2YXJpYWJsZSBkZWNsYXJhdGlvbnMuXG4gICAgZWxzZSBpZiAobm9kZS50eXBlID09PSAnVmFyaWFibGVEZWNsYXJhdGlvbicpIHtcbiAgICAgIGZvciAoY29uc3QgZGVjbGFyYXRpb24gb2Ygbm9kZS5kZWNsYXJhdGlvbnMpIHtcbiAgICAgICAgZGVmaW5lUGF0dGVybihkZWNsYXJhdGlvbi5pZCwgbm9kZS5raW5kICE9PSAndmFyJylcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqICAgTm9kZS5cbiAgICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAgICogICBOb3RoaW5nLlxuICAgKi9cbiAgZnVuY3Rpb24gZXhpdChub2RlKSB7XG4gICAgaWYgKFxuICAgICAgbm9kZS50eXBlID09PSAnQXJyb3dGdW5jdGlvbkV4cHJlc3Npb24nIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdGdW5jdGlvbkRlY2xhcmF0aW9uJyB8fFxuICAgICAgbm9kZS50eXBlID09PSAnRnVuY3Rpb25FeHByZXNzaW9uJ1xuICAgICkge1xuICAgICAgY29uc3Qgc2NvcGUgPSBzY29wZXMucG9wKClcbiAgICAgIGFzc2VydChzY29wZSwgJ2V4cGVjdGVkIHNjb3BlJylcbiAgICAgIGFzc2VydCghc2NvcGUuYmxvY2ssICdleHBlY3RlZCBub24tYmxvY2snKVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcgfHxcbiAgICAgIG5vZGUudHlwZSA9PT0gJ0NhdGNoQ2xhdXNlJyB8fFxuICAgICAgbm9kZS50eXBlID09PSAnRG9XaGlsZVN0YXRlbWVudCcgfHxcbiAgICAgIG5vZGUudHlwZSA9PT0gJ0ZvckluU3RhdGVtZW50JyB8fFxuICAgICAgbm9kZS50eXBlID09PSAnRm9yT2ZTdGF0ZW1lbnQnIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdGb3JTdGF0ZW1lbnQnIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdXaGlsZVN0YXRlbWVudCdcbiAgICApIHtcbiAgICAgIGNvbnN0IHNjb3BlID0gc2NvcGVzLnBvcCgpXG4gICAgICBhc3NlcnQoc2NvcGUsICdleHBlY3RlZCBzY29wZScpXG4gICAgICBhc3NlcnQoc2NvcGUuYmxvY2ssICdleHBlY3RlZCBibG9jaycpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERlZmluZSBhbiBpZGVudGlmaWVyIGluIGEgc2NvcGUuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGJsb2NrXG4gICAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gICAqL1xuICBmdW5jdGlvbiBkZWZpbmVJZGVudGlmaWVyKGlkLCBibG9jaykge1xuICAgIGxldCBpbmRleCA9IHNjb3Blcy5sZW5ndGhcbiAgICAvKiogQHR5cGUge1Njb3BlIHwgdW5kZWZpbmVkfSAqL1xuICAgIGxldCBzY29wZVxuXG4gICAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICAgIHNjb3BlID0gc2NvcGVzW2luZGV4XVxuXG4gICAgICBpZiAoYmxvY2sgfHwgIXNjb3BlLmJsb2NrKSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgYXNzZXJ0KHNjb3BlKVxuICAgIHNjb3BlLmRlZmluZWQucHVzaChpZClcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZpbmUgYSBwYXR0ZXJuIGluIGEgc2NvcGUuXG4gICAqXG4gICAqIEBwYXJhbSB7UGF0dGVybn0gcGF0dGVyblxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGJsb2NrXG4gICAqL1xuICBmdW5jdGlvbiBkZWZpbmVQYXR0ZXJuKHBhdHRlcm4sIGJsb2NrKSB7XG4gICAgLy8gYFssIHhdYFxuICAgIGlmIChwYXR0ZXJuLnR5cGUgPT09ICdBcnJheVBhdHRlcm4nKSB7XG4gICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgcGF0dGVybi5lbGVtZW50cykge1xuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgIGRlZmluZVBhdHRlcm4oZWxlbWVudCwgYmxvY2spXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBge3g9eX1gXG4gICAgZWxzZSBpZiAocGF0dGVybi50eXBlID09PSAnQXNzaWdubWVudFBhdHRlcm4nKSB7XG4gICAgICBkZWZpbmVQYXR0ZXJuKHBhdHRlcm4ubGVmdCwgYmxvY2spXG4gICAgfVxuXG4gICAgLy8gYHhgXG4gICAgZWxzZSBpZiAocGF0dGVybi50eXBlID09PSAnSWRlbnRpZmllcicpIHtcbiAgICAgIGRlZmluZUlkZW50aWZpZXIocGF0dGVybi5uYW1lLCBibG9jaylcbiAgICB9XG5cbiAgICAvLyBge3h9YFxuICAgIGVsc2UgaWYgKHBhdHRlcm4udHlwZSA9PT0gJ09iamVjdFBhdHRlcm4nKSB7XG4gICAgICBmb3IgKGNvbnN0IHByb3BlcnR5IG9mIHBhdHRlcm4ucHJvcGVydGllcykge1xuICAgICAgICAvLyBge2tleX1gLCBge2tleSA9IHZhbHVlfWAsIGB7a2V5OiB2YWx1ZX1gXG4gICAgICAgIGlmIChwcm9wZXJ0eS50eXBlID09PSAnUHJvcGVydHknKSB7XG4gICAgICAgICAgZGVmaW5lUGF0dGVybihwcm9wZXJ0eS52YWx1ZSwgYmxvY2spXG4gICAgICAgIH1cbiAgICAgICAgLy8gYHsuLi54fWBcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgYXNzZXJ0KHByb3BlcnR5LnR5cGUgPT09ICdSZXN0RWxlbWVudCcpXG4gICAgICAgICAgZGVmaW5lUGF0dGVybihwcm9wZXJ0eSwgYmxvY2spXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBgLi4ueGBcbiAgICBlbHNlIHtcbiAgICAgIGFzc2VydChwYXR0ZXJuLnR5cGUgPT09ICdSZXN0RWxlbWVudCcpXG4gICAgICBkZWZpbmVQYXR0ZXJuKHBhdHRlcm4uYXJndW1lbnQsIGJsb2NrKVxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/estree-util-scope@1.0.0/node_modules/estree-util-scope/lib/index.js\n");

/***/ })

};
;