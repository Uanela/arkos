"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unist-util-remove@4.0.0";
exports.ids = ["vendor-chunks/unist-util-remove@4.0.0"];
exports.modules = {

/***/ "(rsc)/../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"(rsc)/../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js\");\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\n\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * `tree` itself is never tested.\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @overload\n * @param {Node} node\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @overload\n * @param {Node} node\n * @param {Options | null | undefined} options\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @param {Node} tree\n *   Tree to change.\n * @param {Options | Test} options\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {undefined}\n *   Nothing.\n */\nfunction remove(tree, options, test) {\n  const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test || options)\n  let cascade = true\n\n  if (\n    options &&\n    typeof options === 'object' &&\n    'cascade' in options &&\n    typeof options.cascade === 'boolean'\n  ) {\n    cascade = options.cascade\n  }\n\n  preorder(tree)\n\n  /**\n   * Check and remove nodes recursively in preorder.\n   * For each composite node, modify its children array in-place.\n   *\n   * @param {Node} node\n   * @param {number | undefined} [index]\n   * @param {Parent | undefined} [parent]\n   * @returns {boolean}\n   */\n  function preorder(node, index, parent) {\n    if (node !== tree && is(node, index, parent)) {\n      return false\n    }\n\n    if ('children' in node && Array.isArray(node.children)) {\n      const nodeAsParent = /** @type {Parent} */ (node)\n      const children = nodeAsParent.children\n      let oldChildIndex = -1\n      let newChildIndex = 0\n\n      if (children.length > 0) {\n        // Move all living children to the beginning of the children array.\n        while (++oldChildIndex < children.length) {\n          if (preorder(children[oldChildIndex], oldChildIndex, nodeAsParent)) {\n            children[newChildIndex++] = children[oldChildIndex]\n          }\n        }\n\n        // Cascade delete.\n        if (node !== tree && cascade && !newChildIndex) {\n          return false\n        }\n\n        // Drop other nodes.\n        children.length = newChildIndex\n      }\n    }\n\n    return true\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3VuaXN0LXV0aWwtcmVtb3ZlQDQuMC4wL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsOEJBQThCO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNEJBQTRCO0FBQzFDO0FBQ0E7QUFDQTs7QUFFcUM7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQjtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLHNEQUFPO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxvQkFBb0I7QUFDakMsYUFBYSxvQkFBb0I7QUFDakMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQ0FBc0MsUUFBUTtBQUM5QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdWFuZWxhX2NvbW8vRG9jdW1lbnRzL2RldmVsb3BtZW50L25vZGVqcy9hcmtvcy9ub2RlX21vZHVsZXMvLnBucG0vdW5pc3QtdXRpbC1yZW1vdmVANC4wLjAvbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtcmVtb3ZlL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuTm9kZX0gTm9kZVxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QnKS5QYXJlbnR9IFBhcmVudFxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QtdXRpbC1pcycpLlRlc3R9IFRlc3RcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIE9wdGlvbnNcbiAqICAgQ29uZmlndXJhdGlvbi5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtjYXNjYWRlPXRydWVdXG4gKiAgIFdoZXRoZXIgdG8gZHJvcCBwYXJlbnQgbm9kZXMgaWYgdGhleSBoYWQgY2hpbGRyZW4sIGJ1dCBhbGwgdGhlaXIgY2hpbGRyZW5cbiAqICAgd2VyZSBmaWx0ZXJlZCBvdXQgKGRlZmF1bHQ6IGB0cnVlYCkuXG4gKi9cblxuaW1wb3J0IHtjb252ZXJ0fSBmcm9tICd1bmlzdC11dGlsLWlzJ1xuXG4vKipcbiAqIENoYW5nZSB0aGUgZ2l2ZW4gYHRyZWVgIGJ5IHJlbW92aW5nIGFsbCBub2RlcyB0aGF0IHBhc3MgYHRlc3RgLlxuICpcbiAqIGB0cmVlYCBpdHNlbGYgaXMgbmV2ZXIgdGVzdGVkLlxuICogVGhlIHRyZWUgaXMgd2Fsa2VkIGluIHByZW9yZGVyIChOTFIpLCB2aXNpdGluZyB0aGUgbm9kZSBpdHNlbGYsIHRoZW4gaXRzXG4gKiBoZWFkLCBldGMuXG4gKlxuICogQG92ZXJsb2FkXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEBwYXJhbSB7VGVzdH0gW3Rlc3RdXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICpcbiAqIEBvdmVybG9hZFxuICogQHBhcmFtIHtOb2RlfSBub2RlXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBvcHRpb25zXG4gKiBAcGFyYW0ge1Rlc3R9IFt0ZXN0XVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqXG4gKiBAcGFyYW0ge05vZGV9IHRyZWVcbiAqICAgVHJlZSB0byBjaGFuZ2UuXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBUZXN0fSBvcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB7VGVzdH0gW3Rlc3RdXG4gKiAgIGB1bmlzdC11dGlsLWlzYCBjb21wYXRpYmxlIHRlc3QuXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICogICBOb3RoaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKHRyZWUsIG9wdGlvbnMsIHRlc3QpIHtcbiAgY29uc3QgaXMgPSBjb252ZXJ0KHRlc3QgfHwgb3B0aW9ucylcbiAgbGV0IGNhc2NhZGUgPSB0cnVlXG5cbiAgaWYgKFxuICAgIG9wdGlvbnMgJiZcbiAgICB0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcgJiZcbiAgICAnY2FzY2FkZScgaW4gb3B0aW9ucyAmJlxuICAgIHR5cGVvZiBvcHRpb25zLmNhc2NhZGUgPT09ICdib29sZWFuJ1xuICApIHtcbiAgICBjYXNjYWRlID0gb3B0aW9ucy5jYXNjYWRlXG4gIH1cblxuICBwcmVvcmRlcih0cmVlKVxuXG4gIC8qKlxuICAgKiBDaGVjayBhbmQgcmVtb3ZlIG5vZGVzIHJlY3Vyc2l2ZWx5IGluIHByZW9yZGVyLlxuICAgKiBGb3IgZWFjaCBjb21wb3NpdGUgbm9kZSwgbW9kaWZ5IGl0cyBjaGlsZHJlbiBhcnJheSBpbi1wbGFjZS5cbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBbaW5kZXhdXG4gICAqIEBwYXJhbSB7UGFyZW50IHwgdW5kZWZpbmVkfSBbcGFyZW50XVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGZ1bmN0aW9uIHByZW9yZGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZSAhPT0gdHJlZSAmJiBpcyhub2RlLCBpbmRleCwgcGFyZW50KSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgaWYgKCdjaGlsZHJlbicgaW4gbm9kZSAmJiBBcnJheS5pc0FycmF5KG5vZGUuY2hpbGRyZW4pKSB7XG4gICAgICBjb25zdCBub2RlQXNQYXJlbnQgPSAvKiogQHR5cGUge1BhcmVudH0gKi8gKG5vZGUpXG4gICAgICBjb25zdCBjaGlsZHJlbiA9IG5vZGVBc1BhcmVudC5jaGlsZHJlblxuICAgICAgbGV0IG9sZENoaWxkSW5kZXggPSAtMVxuICAgICAgbGV0IG5ld0NoaWxkSW5kZXggPSAwXG5cbiAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIE1vdmUgYWxsIGxpdmluZyBjaGlsZHJlbiB0byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjaGlsZHJlbiBhcnJheS5cbiAgICAgICAgd2hpbGUgKCsrb2xkQ2hpbGRJbmRleCA8IGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgIGlmIChwcmVvcmRlcihjaGlsZHJlbltvbGRDaGlsZEluZGV4XSwgb2xkQ2hpbGRJbmRleCwgbm9kZUFzUGFyZW50KSkge1xuICAgICAgICAgICAgY2hpbGRyZW5bbmV3Q2hpbGRJbmRleCsrXSA9IGNoaWxkcmVuW29sZENoaWxkSW5kZXhdXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2FzY2FkZSBkZWxldGUuXG4gICAgICAgIGlmIChub2RlICE9PSB0cmVlICYmIGNhc2NhZGUgJiYgIW5ld0NoaWxkSW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERyb3Agb3RoZXIgbm9kZXMuXG4gICAgICAgIGNoaWxkcmVuLmxlbmd0aCA9IG5ld0NoaWxkSW5kZXhcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js\n");

/***/ })

};
;