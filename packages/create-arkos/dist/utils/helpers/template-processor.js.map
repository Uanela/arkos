{"version":3,"file":"template-processor.js","sourceRoot":"","sources":["../../../src/utils/helpers/template-processor.ts"],"names":[],"mappings":"","sourcesContent":["// import Handlebars from \"handlebars\";\n// import fs from \"fs\";\n// import { ProjectConfig } from \"../project-config-inquirer\";\n\n// async function processTemplate(templatePath: string, config: ProjectConfig) {\n//   const files = await this.getAllFiles(templatePath);\n\n//   for (const file of files) {\n//     const content = fs.readFileSync(file, \"utf-8\");\n\n//     // Compile template\n//     const template = Handlebars.compile(content);\n\n//     // Replace with config values\n//     const processed = template({\n//       PROJECT_NAME: config.projectName,\n//       AUTH_ENABLED: config.authentication.enabled,\n//       AUTH_TYPE: config.authentication.type,\n//       VALIDATION_ENABLED: config.validation.enabled,\n//       VALIDATION_TYPE: config.validation.type,\n//       PRISMA_DATABASE_PROVIDER: config.prismaProvideer,\n//     });\n\n//     fs.writeFileSync(file, processed);\n//   }\n// }\n"]}