{{#if typescript}}
import { AuthConfigs } from "arkos/auth";
{{/if}}
import { authService } from "arkos/services";

export const authRolePermissions = {
  canCreate: authService.permission("Create", "auth-role"),
  canUpdate: authService.permission("Update", "auth-role"),
  canDelete: authService.permission("Delete", "auth-role"),
  canView: authService.permission("View", "auth-role"),
}

{{#if typescript}}
const authRoleAuthConfigs: AuthConfigs = {
{{else}}
/** @type {import('arkos/auth').AuthConfigs} */
const authRoleAuthConfigs = {
{{/if}}
  authenticationControl: {
    Create: true,
    Update: true,
    Delete: true,
    View: true,
  },
  {{#if (eq authentication.type "static")}}
  accessControl: {
    // Create: {
    {{#if (eq authentication.type "static")}}
    //   roles: [],
    {{/if}}
    //   name: "Create New Auth Role",
    //   description: "Permission to create auth role records"
    // },
    // Update: {
    {{#if (eq authentication.type "static")}}
    //   roles: [],
    {{/if}}
    //   name: "Update Auth Role",
    //   description: "Permission to update auth role records"
    // },
    // Delete: {
    {{#if (eq authentication.type "static")}}
    //   roles: [],
    {{/if}}
    //   name: "Delete Auth Role",
    //   description: "Permission to delete auth role records"
    // },
    // View: {
    {{#if (eq authentication.type "static")}}
    //   roles: [],
    {{/if}}
    //   name: "View Auth Role",
    //   description: "Permission to update auth role records"
    // },
  },
  {{/if}}
};

export default authRoleAuthConfigs;
