import { IncomingMessage, Server, ServerResponse } from "http";
import AppError from "./modules/error-handler/utils/app-error";
import { Express } from "express";
import { bootstrap } from "./app";
import { InitConfigs } from "./types/init-configs";
import deepmerge from "./utils/helpers/deepmerge.helper";
import fs from "fs";
import path, { dirname } from "path";

process.on("uncaughtException", (err) => {
  console.error("UNCAUGHT EXCEPTION! SHUTTING DOWN...");
  console.error(err.name, err.message);
  console.error(err);
  process.exit(1);
});

let server: Server<typeof IncomingMessage, typeof ServerResponse>;
let _app: Express;
let _initConfigs: InitConfigs = {
  welcomeMessage:
    "Welcome to our REST API generated by Arkos, find out more about Arkos at www.arkosjs.com",
  authentication: false,
  port: Number(process.env.PORT) || 8000,
};

/**
 * Initializes the application server.
 *
 * This function starts the server by listening on a specified port.
 * The port is determined by the following order of precedence:
 * 1. The `PORT` environment variable.
 * 2. The `port` argument passed to the function.
 * 3. Defaults to `8000` if neither is provided.
 *
 * @param {InitConfigs} initConfigs - initial configs for the api ( authentication, port).
 * @returns {Promise<void>} This function does not return a value.
 */
async function initApp(initConfigs: InitConfigs = {}): Promise<void> {
  _initConfigs = deepmerge(_initConfigs, initConfigs);

  const port = Number(process.env.PORT) || _initConfigs.port || 8000;
  _app = await bootstrap(_initConfigs);

  server = _app.listen(port, () => {
    const time = new Date().toTimeString().split(" ")[0];
    console.info(
      `[\x1b[32mREADY\x1b[0m] \x1b[90m${time}\x1b[0m App running on port \x1b[33m${port}\x1b[0m, server waiting on http://localhost:${port}`
    );
    console.log(
      `${!!process.env.NODE_ENV && `Environment: ${process.env.NODE_ENV}`}`
    );
  });
}

// process.nextTick(() => {
//   const version = JSON.parse(
//     fs.readFileSync(path.join(__dirname, "../../package.json"), "utf8")
//   ).version;

//   console.info(`ðŸš€ Arkos.js v${version}`);
//   // console.info(`   - Local: http://localhost:${port}`);
//   console.info(
//     `${!!process.env.NODE_ENV && `   - Environment: ${process.env.NODE_ENV}`}`
//   );
//   console.info(" ");
// });

process.on("unhandledRejection", (err: AppError) => {
  console.error("UNHANDLED REJECTION! SHUTTING DOWN...");
  console.error(err.name, err.message);
  server.close(() => {
    process.exit(1);
  });
});

export function getInitConfigs() {
  return _initConfigs;
}

export function getExpressApp() {
  return _app;
}

export { server, initApp };
